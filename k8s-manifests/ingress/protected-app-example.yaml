apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: protected-app-example
  namespace: your-app-namespace
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Authelia authentication annotations
    nginx.ingress.kubernetes.io/auth-url: "http://authelia-service.auth-system.svc.cluster.local:9091/api/verify"
    nginx.ingress.kubernetes.io/auth-signin: "https://authelia.yasirbhati.site/?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "Remote-User,Remote-Name,Remote-Email,Remote-Groups"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $user $upstream_http_remote_user;
      auth_request_set $name $upstream_http_remote_name;
      auth_request_set $email $upstream_http_remote_email;
      auth_request_set $groups $upstream_http_remote_groups;
      proxy_set_header Remote-User $user;
      proxy_set_header Remote-Name $name;
      proxy_set_header Remote-Email $email;
      proxy_set_header Remote-Groups $groups;
spec:
  tls:
  - hosts:
    - app.yasirbhati.site
    secretName: app-tls
  rules:
  - host: app.yasirbhati.site
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: your-app-service
            port:
              number: 80